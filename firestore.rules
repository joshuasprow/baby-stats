rules_version = '2';
service cloud.firestore {
  function isLoggedIn(request) {
    return request.auth.uid != null;
  }

  function isSprow(request) {
    return request.auth.token.email.matches('^(j|rachel[.])sprow@gmail[.]com$')
  }
  
  match /databases/{database}/documents {
    match /babies/{babyId} {
      function isParent(uid) {
        return uid in get(/databases/$(database)/documents/babies/$(babyId)).data.parents
      }

      function isAuthorized(request) {
        return isLoggedIn(request) && isSprow(request) && isParent(request.auth.uid);
      }

      allow create, read, update: if isAuthorized(request);

      match /feeds/{feedId} {
        allow create, read, update, delete: if isAuthorized(request);
      }
      match /naps/{napId} {
        allow create, read, update, delete: if isAuthorized(request);
      }
      match /pees/{peeId} {
        allow create, read, update, delete: if isAuthorized(request);
      }
      match /poops/{poopId} {
        allow create, read, update, delete: if isAuthorized(request);
      }
    }

    match /entries/{entryId} {
      function isParent(request, resource) {
        let babyId = resource.data.babyId;
        let doc = get(/databases/$(database)/documents/babies/$(babyId));

        return request.auth.uid in doc.data.parents;
      }

      function isAuthorized(request, resource) {
        return isLoggedIn(request) && isSprow(request) && isParent(request, resource);
      }

      allow create, read, update, delete: if isAuthorized(request, resource);
    }

    match /users/{userId} {
      function isOwner(request, docId) {
          return request.auth.uid == docId
      }

      function isAuthorized(request) {
        return isLoggedIn(request) && isSprow(request) && isOwner(request, userId);
      }

      allow create, read, update: if isAuthorized(request);

      match /themes/{themeId} {
        allow create, read, update, delete: if isAuthorized(request);
      }

      match /snapshots/{document=**} {
        allow create, read, update: if isAuthorized(request);
      }
    }
  }
}