rules_version = '2';
service cloud.firestore {
  function isLoggedIn(request) {
    return request.auth.uid != null;
  }

  function isSprow(request) {
    return request.auth.token.email.matches('^(jsprow|rachel[.]sprow|quyenjle|claudiajle1005)@gmail[.]com$')
  }
  
  match /databases/{database}/documents {
    match /logs/{logId} {
      allow create;
      allow read: if isSprow(request);
    }

    match /babies/{babyId} {
      function isParent(uid) {
        return uid in get(/databases/$(database)/documents/babies/$(babyId)).data.parents
      }

      function isAuthorized(request) {
        return isLoggedIn(request) && isSprow(request) && isParent(request.auth.uid);
      }

      allow create, read, update: if isAuthorized(request);

      match /feeds/{feedId} {
        allow create, read, update, delete: if isAuthorized(request);
      }
      match /naps/{napId} {
        allow create, read, update, delete: if isAuthorized(request);
      }
      match /pees/{peeId} {
        allow create, read, update, delete: if isAuthorized(request);
      }
      match /poops/{poopId} {
        allow create, read, update, delete: if isAuthorized(request);
      }
    }

    match /entries/{entryId} {
      function isParent(uid, babyId) {
        return uid in get(/databases/$(database)/documents/babies/$(babyId)).data.parents;
      }

      function isAuthorized(request, babyId) {
        return isLoggedIn(request) && isSprow(request) && isParent(request.auth.uid, babyId);
      }

      allow get, list, delete: if isAuthorized(request, resource.data.babyId);
      
      // resource doesn't exist before create, so we can't use it to check permissions
      // update should keep the same babyId
      allow create, update: if isAuthorized(request, request.resource.data.babyId);
    }

    match /users/{userId} {
      function isOwner(request, docId) {
          return request.auth.uid == docId
      }

      function isAuthorized(request) {
        return isLoggedIn(request) && isSprow(request) && isOwner(request, userId);
      }

      allow create, read, update: if isAuthorized(request);

      match /themes/{themeId} {
        allow create, read, update, delete: if isAuthorized(request);
      }

      match /snapshots/{document=**} {
        allow create, read, update: if isAuthorized(request);
      }
    }
  }
}